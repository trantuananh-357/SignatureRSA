/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import static controller.HashUtil.hashMessage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.Random;
import javax.swing.JOptionPane;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.Signature;
import java.util.Base64;
import java.math.BigInteger;
import java.nio.ByteBuffer;
import java.security.*;
import java.security.spec.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HexFormat;
import java.util.Scanner;
import jdk.jfr.ValueDescriptor;
/**
 *
 * @author Acer
 */
public class Home extends javax.swing.JFrame {
    
    
    
    
    static PublicKey publicKey;
    static PrivateKey privateKey;
    private static int p, q, n, phi_n, d;
    private static int e;
    private static ArrayList<Integer> dsIndexAm = new ArrayList<>();
    private static ArrayList<String> dsUser = new ArrayList<>();
    private static ArrayList<Integer> dsE = new ArrayList<>();    
    private static ArrayList<Integer> dsN = new ArrayList<>();
    
    byte[] hash;
    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
        
        if(dsUser.size() == 0){
            cmbPublicKey.removeAllItems();
            for(int  i = 0; i < dsUser.size(); i++){
                cmbPublicKey.addItem(dsUser.get(i));
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        FileImportView = new javax.swing.JDialog();
        boxFileImport = new javax.swing.JFileChooser();
        FileImportRecived = new javax.swing.JDialog();
        boxFileRecived = new javax.swing.JFileChooser();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        rdBtnAuto = new javax.swing.JRadioButton();
        rdBtnOption = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        valueP = new javax.swing.JTextField();
        valueN = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        valuePhiN = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        valueq = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        valueE = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        valueD = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btnCreateKey = new javax.swing.JButton();
        btnGetNewKey = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        btnFile = new javax.swing.JButton();
        txtBanRoEnCode = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtBanMaHoaEncode = new javax.swing.JTextField();
        btnEncode = new javax.swing.JButton();
        txtNameUserCreate = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        btnFileDeCode = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        txtSignature = new javax.swing.JTextField();
        txtBanMaHoaDecode = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtGiaiMaDecode = new javax.swing.JTextField();
        btnDecode = new javax.swing.JButton();
        cmbPublicKey = new javax.swing.JComboBox<>();
        txtBanGocDecode = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        btnCreateNew = new javax.swing.JButton();

        FileImportView.setMinimumSize(new java.awt.Dimension(500, 326));
        FileImportView.getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        boxFileImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxFileImportActionPerformed(evt);
            }
        });
        FileImportView.getContentPane().add(boxFileImport);

        FileImportRecived.setMinimumSize(new java.awt.Dimension(500, 326));

        boxFileRecived.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxFileRecivedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FileImportRecivedLayout = new javax.swing.GroupLayout(FileImportRecived.getContentPane());
        FileImportRecived.getContentPane().setLayout(FileImportRecivedLayout);
        FileImportRecivedLayout.setHorizontalGroup(
            FileImportRecivedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FileImportRecivedLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(boxFileRecived, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        FileImportRecivedLayout.setVerticalGroup(
            FileImportRecivedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FileImportRecivedLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(boxFileRecived, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.setText("SHA-256");
        jTextField1.setFocusable(false);
        jTextField1.setRequestFocusEnabled(false);

        jLabel2.setText("Băm ( Pha 1)");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel3.setText("Tạo Khoá");

        rdBtnAuto.setText("Tự Động");

        rdBtnOption.setText("Tuỳ Chọn");

        jLabel6.setText("P = ");

        jLabel7.setText("n =");

        jLabel8.setText("phi-n");

        jLabel9.setText("q =");

        jLabel10.setText("e =");

        jLabel11.setText("d = ");

        btnCreateKey.setText("Tạo Khoá");
        btnCreateKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateKeyActionPerformed(evt);
            }
        });

        btnGetNewKey.setText("Lấy Khoá Mới");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(85, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rdBtnOption, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(rdBtnAuto, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(btnCreateKey, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGetNewKey)
                            .addGap(1, 1, 1))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(valueN, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(valueP, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(valuePhiN, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addGap(18, 18, 18)
                                    .addComponent(valueq, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(valueD))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(18, 18, 18)
                                        .addComponent(valueE, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addGap(77, 77, 77))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(59, 59, 59)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdBtnOption)
                    .addComponent(rdBtnAuto))
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(valueq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(valueP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(valueE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(valueN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valuePhiN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(valueD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(66, 66, 66)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreateKey)
                    .addComponent(btnGetNewKey))
                .addContainerGap(120, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel4.setText("Tạo Khoá");

        btnFile.setText("File");
        btnFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFileActionPerformed(evt);
            }
        });

        jLabel12.setText("Bản Rõ");

        jLabel13.setText("Bản Mã Hoá");

        btnEncode.setText("Mã Hoá");
        btnEncode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncodeActionPerformed(evt);
            }
        });

        jLabel17.setText("Tên người đăng kí :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnFile)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtBanRoEnCode, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtBanMaHoaEncode, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNameUserCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnEncode)
                .addGap(186, 186, 186))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFile)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBanRoEnCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel17)
                    .addComponent(txtNameUserCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBanMaHoaEncode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addComponent(btnEncode)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        jLabel5.setText("Giải Mã");

        btnFileDeCode.setText("File");
        btnFileDeCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFileDeCodeActionPerformed(evt);
            }
        });

        jLabel14.setText("Bản gốc để kiểm tra");

        jLabel15.setText("Mã hoá hàm băm");

        jLabel16.setText("Giải mã");

        btnDecode.setText("Giải mã");
        btnDecode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecodeActionPerformed(evt);
            }
        });

        cmbPublicKey.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbPublicKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPublicKeyActionPerformed(evt);
            }
        });

        jLabel18.setText("Khoá cần kiếm tra");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(btnDecode))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel18))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtGiaiMaDecode, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtBanMaHoaDecode, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(txtSignature, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbPublicKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(txtBanGocDecode, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(48, 48, 48)
                                    .addComponent(btnFileDeCode))))))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFileDeCode)
                    .addComponent(txtBanGocDecode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSignature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbPublicKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBanMaHoaDecode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtGiaiMaDecode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addContainerGap(51, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDecode)
                        .addGap(21, 21, 21))))
        );

        btnCreateNew.setText("Nhập Mới");
        btnCreateNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCreateNew))
                .addGap(17, 17, 17))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(btnCreateNew))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateKeyActionPerformed
        
        long start = 2;
        long end = 100;
        boolean flag = true;
        
        if(rdBtnAuto.isSelected() && rdBtnOption.isSelected()){
            JOptionPane.showMessageDialog(this, "Chỉ chọn 1 Option");
            rdBtnAuto.setSelected(false);
            rdBtnOption.setSelected(false);
        }
        else if(rdBtnAuto.isSelected()){
            valueP.setText(generateRandomPrime(start, end));
            valueq.setText(generateRandomPrime(start, end));
        }
        else if(rdBtnOption.isSelected()){
            if(valueP.getText().isEmpty()){
               JOptionPane.showMessageDialog(this, "Vui Lòng Nhập Vào P!");
               flag = false;
            }
            else if(valueq.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Vui Lòng Nhập Vào q!");
                flag = false;

            }
            else if(valueN.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Vui Lòng Nhập Vào N!");
                flag = false;

            }
            else if(valueE.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Vui Lòng Nhập Vào E!");
                flag = false;

            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Vui Lòng Chọn 1 Option Tạo Khoá!");
        }
        if(flag){
             p = Integer.parseInt(valueP.getText());
             q = Integer.parseInt(valueq.getText());
            phi_n = (p-1) * (q-1);
            valuePhiN.setText(phi_n+"");
            n = p * q;
            e = 5;
            d = modInverse(e, phi_n);
            valueN.setText(n + "");
            valueE.setText(e+"");
            valueD.setText(d+"");
            
            
        }
        
    }//GEN-LAST:event_btnCreateKeyActionPerformed

    private void btnDecodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecodeActionPerformed
        
        
        int indexUser = cmbPublicKey.getSelectedIndex();
        System.out.println("index = " + indexUser);
        System.out.println("e = " + dsE.get(indexUser));
        System.out.println("n = " + dsN.get(indexUser));
        if(txtBanGocDecode.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Vui lòng nhập bản gốc mà người nhận nhận được để kiểm tra!");
        }
        else if(txtSignature.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Vui lòng nhập vào khoá để xác thực người gửi!");
        }
        else{
            
                
                String banGoc = txtBanGocDecode.getText();
                byte[] hashRecived = new byte[DO_NOTHING_ON_CLOSE];
                try {
                    hashRecived = hashMessage(banGoc);
                    System.out.println("Hashed message: " + bytesToHex(hash));
                } catch (NoSuchAlgorithmException e) {
                    e.printStackTrace();
                }
                System.out.println("Hash nguwoif nhan duoc = ");
                for(int i = 0 ; i < hashRecived.length; i++){
                    System.out.print(hashRecived[i] + " ");
                }
                String input = txtSignature.getText();
                int[] signature = stringToIntArray(input);
                System.out.println();
                dsIndexAm.removeAll(dsIndexAm);
                for(int i = 0; i < hashRecived.length; i++){
                    if(hashRecived[i] < 0){
                        dsIndexAm.add(i);
                    }
                }
                int[] decryptedSignature = new int[signature.length];
                System.out.println("");
                System.out.println("Hash 2 : Giải mã");
                for (int i = 0; i < signature.length; i++) {
                    int decrytedTemp = modPow(signature[i], dsE.get(indexUser), dsN.get(indexUser));
                    if(dsIndexAm.contains(i)){
                        decrytedTemp -= n;
                    }
                    decryptedSignature[i] = decrytedTemp;
                    System.out.print(decryptedSignature[i] + " ");
                }

                // Convert decrypted signature back to string
                String decryptedMessage = toString(decryptedSignature);
                boolean flag = true;
                if(hashRecived.length != decryptedSignature.length){
                    flag = false;
                }
                else{
                    for(int i = 0 ; i < hashRecived.length; i++){
                        if(hashRecived[i] != decryptedSignature[i]){
                           flag = false;
                           break;
                        }
                    }
                }
                System.out.println("Chu ki = " + input);
                if(flag){
                    JOptionPane.showMessageDialog(this, "Chữ kí đúng!");
                }
                else{
                    JOptionPane.showMessageDialog(this, "Chữ kí giả mạo!");

                }
        }
        
    }//GEN-LAST:event_btnDecodeActionPerformed
    
    ////////////////////
    
    public static int[] stringToIntArray(String str) {
        // Tách chuỗi thành mảng các chuỗi con, sử dụng dấu cách làm phân tách
        String[] strArray = str.trim().split(" ");

        // Khởi tạo mảng số nguyên có độ dài bằng với độ dài của mảng chuỗi con
        int[] intArray = new int[strArray.length];

        // Chuyển đổi từng chuỗi con thành số nguyên và lưu vào mảng số nguyên
        for (int i = 0; i < strArray.length; i++) {
            intArray[i] = Integer.parseInt(strArray[i]);
        }
        return intArray;
    }
    private void btnEncodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncodeActionPerformed

        
        boolean flag = true;
        if(txtBanRoEnCode.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Vui lòng nhập vào bản rõ");
            flag = false;
        }
        else if(txtNameUserCreate.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Vui lòng nhập vào tên người dùng");
            flag = false;
        }
        else{
                String message = txtBanRoEnCode.getText();
            System.out.println(message);
            try {
                hash = hashMessage(message);
                System.out.println("Hashed message: " + bytesToHex(hash));
            } catch (NoSuchAlgorithmException e) {
                e.printStackTrace();
            }
            int[] messageInts = toIntArray(message);
            System.out.println("n = " + n);
            System.out.println("hash 1 : Mã hoá -  Tạo khoá");

            for(int i = 0; i <hash.length; i++){
                System.out.println(hash[i] < 0);
                System.out.print(hash[i] + " ");
            }
            // Generate the signature using private key (d)
            int[] signature = new int[hash.length];
            for (int i = 0; i < hash.length; i++) {
                int encrytedValue = modPow(hash[i], d, n);
                if(encrytedValue < 0){
                    encrytedValue += n;
                }
                signature[i] = encrytedValue;
            }

            String[] stringArray = Arrays.stream(signature).mapToObj(String::valueOf).toArray(String[]::new);
            txtBanMaHoaEncode.setText(String.join(" ", stringArray));
            dsUser.add(txtNameUserCreate.getText());
            cmbPublicKey.addItem(txtNameUserCreate.getText());
            dsE.add(e);
            dsN.add(n);
            
            
            JOptionPane.showMessageDialog(this, "Tạo chữ kí thành công!");

            
        }
        
        
        

    }//GEN-LAST:event_btnEncodeActionPerformed

    private void btnCreateNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateNewActionPerformed
       txtBanGocDecode.setText("");
       txtBanMaHoaDecode.setText("");
       txtGiaiMaDecode.setText("");
       txtBanMaHoaEncode.setText("");
       txtNameUserCreate.setText("");
       txtSignature.setText("");
       txtBanRoEnCode.setText("");

        
        
    }//GEN-LAST:event_btnCreateNewActionPerformed

    private void btnFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFileActionPerformed
        FileImportView.setVisible(true);
    }//GEN-LAST:event_btnFileActionPerformed

    private void boxFileImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxFileImportActionPerformed
        File selectedFile = boxFileImport.getSelectedFile();
        String fileContent = readFileToString(selectedFile);
        txtBanRoEnCode.setText(fileContent);
        System.out.println("File content:\n" + fileContent);
        FileImportView.setVisible(false);
    }//GEN-LAST:event_boxFileImportActionPerformed

    private void btnFileDeCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFileDeCodeActionPerformed
                FileImportRecived.setVisible(true);
        
    }//GEN-LAST:event_btnFileDeCodeActionPerformed

    private void boxFileRecivedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxFileRecivedActionPerformed
         File selectedFile = boxFileRecived.getSelectedFile();
        String fileContent = readFileToString(selectedFile);
        txtBanGocDecode.setText(fileContent);
        System.out.println("File content:\n" + fileContent);
        FileImportRecived.setVisible(false);
    }//GEN-LAST:event_boxFileRecivedActionPerformed

    private void cmbPublicKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPublicKeyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbPublicKeyActionPerformed
    private static String readFileToString(File file) {
        StringBuilder content = new StringBuilder();

        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
            String line;
            while ((line = reader.readLine()) != null) {
                content.append(line).append("\n");
            }
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error reading file: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        return content.toString();
    }
    private static String bytesToHex(byte[] bytes) {
        StringBuilder sb = new StringBuilder();
        for (byte b : bytes) {
            sb.append(String.format("%02x", b));
        }
        return sb.toString();
    }
    public static byte[] hashMessage(String message) throws NoSuchAlgorithmException {
        MessageDigest digest = MessageDigest.getInstance("SHA-256");
        return digest.digest(message.getBytes());
    }
    public static int[] toIntArray(String message) {
        int[] result = new int[message.length()];
        for (int i = 0; i < message.length(); i++) {
            result[i] = (int) message.charAt(i);
        }
        return result;
    }
    
    // Method to convert an array of integers to a string
    public static String toString(int[] array) {
        StringBuilder sb = new StringBuilder();
        for (int value : array) {
            sb.append((char) value);
        }
        return sb.toString();
    }
   

   
    
    
   ////////
    public static int modPow(int base, int exp, int mod) {
        int result = 1;
        while (exp > 0) {
            if ((exp & 1) == 1) {
                result = (result * base) % mod;
            }
            base = (base * base) % mod;
            exp >>= 1;
        }
        return result;
    }
    public static int modInverse(int a, int m) {
        int[] result = extendedGCD(a, m);
        int gcd = result[0];
        int x = result[1];
        
        if (gcd != 1) {
            throw new IllegalArgumentException("Inverse doesn't exist");
        } else {
            // Đảm bảo x là dương
            return (x % m + m) % m;
        }
    }

    // Hàm mở rộng Euclidean để tìm GCD và các hệ số x, y
    private static int[] extendedGCD(int a, int b) {
        if (b == 0) {
            return new int[] { a, 1, 0 };
        } else {
            int[] result = extendedGCD(b, a % b);
            int gcd = result[0];
            int x1 = result[1];
            int y1 = result[2];
            int x = y1;
            int y = x1 - (a / b) * y1;
            return new int[] { gcd, x, y };
        }
    }
    public static boolean isPrime(long number) {
        if (number <= 1) {
            return false;
        }
        for (int i = 2; i <= Math.sqrt(number); i++) {
            if (number % i == 0) {
                return false;
            }
        }
        return true;
    }
     public static String generateRandomPrime(long min, long max) {
        Random random = new Random();
        long prime = 0;
        boolean found = false;

        while (!found) {
            long candidate = random.nextLong(max - min + 1) + min;
            if (isPrime(candidate)) {
                prime = candidate;
                found = true;
            }
        }
        return prime + "";
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
                   
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog FileImportRecived;
    private javax.swing.JDialog FileImportView;
    private javax.swing.JFileChooser boxFileImport;
    private javax.swing.JFileChooser boxFileRecived;
    private javax.swing.JButton btnCreateKey;
    private javax.swing.JButton btnCreateNew;
    private javax.swing.JButton btnDecode;
    private javax.swing.JButton btnEncode;
    private javax.swing.JButton btnFile;
    private javax.swing.JButton btnFileDeCode;
    private javax.swing.JButton btnGetNewKey;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cmbPublicKey;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JRadioButton rdBtnAuto;
    private javax.swing.JRadioButton rdBtnOption;
    private javax.swing.JTextField txtBanGocDecode;
    private javax.swing.JTextField txtBanMaHoaDecode;
    private javax.swing.JTextField txtBanMaHoaEncode;
    private javax.swing.JTextField txtBanRoEnCode;
    private javax.swing.JTextField txtGiaiMaDecode;
    private javax.swing.JTextField txtNameUserCreate;
    private javax.swing.JTextField txtSignature;
    private javax.swing.JTextField valueD;
    private javax.swing.JTextField valueE;
    private javax.swing.JTextField valueN;
    private javax.swing.JTextField valueP;
    private javax.swing.JTextField valuePhiN;
    private javax.swing.JTextField valueq;
    // End of variables declaration//GEN-END:variables
}
